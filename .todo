++
#actions, #capped_callable

We need wrapper around capped collection that the type of services
is callable.
with this wrapper we ease the execution of registered services;
the code below demonstrate it

[code:]
    $container = $this->services()->from('/modules/foundation');
    $wrapped   = new ContainerCallable($container);
    $result    = $wrapper->config('extra_config');
[code]

[code:]
    $callable = $this->services()->get('/modules/foundation/config');
    $result   = call_user_func($callable, 'extra_config')
[code]

++ ---------------------------------------------------------------------------------

++
#throw, #exception, #error

Be careful on every line inside classes that you used another class methods and
may throws exception with this call
try and catch or rise an exception belong to the class itself

[code:]
try{
    $resource = $streamClient->getConnect();
} catch(\Exception $e)
{
    throw new \Exception(sprintf(
        'Cannot connect to (%s).'
        , $this->options()->getServerUrl()->toString()
        , $e->getCode()
        , $e ## as previous exception
    ));
}
[code]

++ ---------------------------------------------------------------------------------
